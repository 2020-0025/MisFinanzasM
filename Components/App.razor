
<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="MisFinanzas.styles.css" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <HeadOutlet />

    <!-- Script Helper para Autenticación -->
    <script>
        // Configuración inicial para evitar problemas de timing
        window.blazorReady = false;

        // Auth Helper Functions
        window.authHelper = {
            isStorageAvailable: function() {
                try {
                    const test = '__test__';
                    sessionStorage.setItem(test, test);
                    sessionStorage.removeItem(test);
                    return true;
                } catch(e) {
                    return false;
                }
            },

            saveAuthData: function(userId, userName, userRole) {
                try {
                    if (!this.isStorageAvailable()) return false;

                    sessionStorage.setItem('userId', userId);
                    sessionStorage.setItem('userName', userName);
                    sessionStorage.setItem('userRole', userRole);

                    console.log('✅ Auth data saved:', { userId, userName, userRole });
                    return sessionStorage.getItem('userId') === userId;
                } catch(e) {
                    console.error('Error saving auth:', e);
                    return false;
                }
            },

            getAuthData: function() {
                try {
                    if (!this.isStorageAvailable()) return null;

                    const data = {
                        userId: sessionStorage.getItem('userId'),
                        userName: sessionStorage.getItem('userName'),
                        userRole: sessionStorage.getItem('userRole')
                    };

                    return data.userId ? data : null;
                } catch(e) {
                    console.error('Error reading auth:', e);
                    return null;
                }
            },

            clearAuthData: function() {
                try {
                    sessionStorage.removeItem('userId');
                    sessionStorage.removeItem('userName');
                    sessionStorage.removeItem('userRole');
                    return true;
                } catch(e) {
                    return false;
                }
            }
        };

        // Debug function
        window.debugAuth = function() {
            console.log('=== AUTH DEBUG ===');
            const data = window.authHelper.getAuthData();
            console.log('Storage available:', window.authHelper.isStorageAvailable());
            console.log('Auth data:', data);
            console.log('All storage keys:');
            for (let i = 0; i < sessionStorage.length; i++) {
                const key = sessionStorage.key(i);
                console.log(`  ${key}:`, sessionStorage.getItem(key));
            }
            console.log('==================');
        };
    </script>

    <!-- Chart.js -->
     <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

    <!-- AGREGAR BOOTSTRAP JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- AGREGAR BOOTSTRAP Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">

    

</head>

<body>
    <Routes />
    <script src="/_framework/aspnetcore-browser-refresh.js"></script>
    <script src="_framework/blazor.web.js"></script>

    <!-- Script adicional después de que Blazor cargue -->
    <script>
        // Esperar a que Blazor esté completamente cargado
        window.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 DOM Loaded - Checking auth status...');

            // Verificar estado inicial
            if (window.authHelper && window.authHelper.isStorageAvailable()) {
                console.log('✅ SessionStorage available');
                const authData = window.authHelper.getAuthData();
                if (authData) {
                    console.log('✅ User authenticated:', authData.userName);
                } else {
                    console.log('ℹ️ No authenticated user');
                }
            } else {
                console.error('❌ SessionStorage not available!');
            }

            // Marcar que el entorno está listo
            setTimeout(function() {
                window.blazorReady = true;
                console.log('✅ Environment ready');
            }, 100);
        });
    </script>

    <!-- Dashboard Charts - cargar DESPUÉS de Chart.js -->
    <script src="js/dashboard-charts.js"></script>

    
</body>

</html>